// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InlineResponse20036EmbeddedStacks inline response 200 36 embedded stacks
// swagger:model inline_response_200_36__embedded_stacks
type InlineResponse20036EmbeddedStacks struct {

	// resource type
	ResourceType string `json:"_type,omitempty"`

	// links
	Links *InlineResponse20036EmbeddedLinks `json:"_links,omitempty"`

	// account id
	AccountID *string `json:"account_id,omitempty"`

	// cpu limits
	CPULimits bool `json:"cpu_limits,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// default
	Default *bool `json:"default,omitempty"`

	// expose intrusion detection reports
	ExposeIntrusionDetectionReports bool `json:"expose_intrusion_detection_reports,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// intrusion detection
	IntrusionDetection bool `json:"intrusion_detection,omitempty"`

	// memory limits
	MemoryLimits bool `json:"memory_limits,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// outbound ip addresses
	OutboundIPAddresses []string `json:"outbound_ip_addresses"`

	// public
	Public bool `json:"public,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// ssh host dsa public key
	SSHHostDsaPublicKey string `json:"ssh_host_dsa_public_key,omitempty"`

	// ssh host ecdsa public key
	SSHHostEcdsaPublicKey string `json:"ssh_host_ecdsa_public_key,omitempty"`

	// ssh host rsa public key
	SSHHostRsaPublicKey string `json:"ssh_host_rsa_public_key,omitempty"`

	// ssh portal host
	SSHPortalHost string `json:"ssh_portal_host,omitempty"`

	// ssh portal port
	SSHPortalPort int64 `json:"ssh_portal_port,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`

	// version
	// Enum: [v1 v2]
	Version string `json:"version,omitempty"`

	// vpc id
	VpcID *int64 `json:"vpc_id,omitempty"`
}

// Validate validates this inline response 200 36 embedded stacks
func (m *InlineResponse20036EmbeddedStacks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InlineResponse20036EmbeddedStacks) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.Links) { // not required
		return nil
	}

	if m.Links != nil {
		if err := m.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

var inlineResponse20036EmbeddedStacksTypeVersionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["v1","v2"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inlineResponse20036EmbeddedStacksTypeVersionPropEnum = append(inlineResponse20036EmbeddedStacksTypeVersionPropEnum, v)
	}
}

const (

	// InlineResponse20036EmbeddedStacksVersionV1 captures enum value "v1"
	InlineResponse20036EmbeddedStacksVersionV1 string = "v1"

	// InlineResponse20036EmbeddedStacksVersionV2 captures enum value "v2"
	InlineResponse20036EmbeddedStacksVersionV2 string = "v2"
)

// prop value enum
func (m *InlineResponse20036EmbeddedStacks) validateVersionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, inlineResponse20036EmbeddedStacksTypeVersionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InlineResponse20036EmbeddedStacks) validateVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.Version) { // not required
		return nil
	}

	// value enum
	if err := m.validateVersionEnum("version", "body", m.Version); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InlineResponse20036EmbeddedStacks) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InlineResponse20036EmbeddedStacks) UnmarshalBinary(b []byte) error {
	var res InlineResponse20036EmbeddedStacks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
