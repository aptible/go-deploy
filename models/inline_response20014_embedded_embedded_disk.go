// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// InlineResponse20014EmbeddedEmbeddedDisk inline response 200 14 embedded embedded disk
// swagger:model inline_response_200_14__embedded__embedded_disk
type InlineResponse20014EmbeddedEmbeddedDisk struct {

	// resource type
	ResourceType string `json:"_type,omitempty"`

	// links
	Links *InlineResponse20014EmbeddedEmbeddedDiskLinks `json:"_links,omitempty"`

	// attached
	Attached bool `json:"attached,omitempty"`

	// availability zone
	AvailabilityZone *string `json:"availability_zone,omitempty"`

	// baseline iops
	BaselineIops *int64 `json:"baseline_iops,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// device
	Device *string `json:"device,omitempty"`

	// ebs volume id
	EbsVolumeID *string `json:"ebs_volume_id,omitempty"`

	// ebs volume type
	EbsVolumeType *string `json:"ebs_volume_type,omitempty"`

	// ec2 instance id
	Ec2InstanceID *string `json:"ec2_instance_id,omitempty"`

	// filesystem
	Filesystem string `json:"filesystem,omitempty"`

	// handle
	Handle string `json:"handle,omitempty"`

	// host
	Host *string `json:"host,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// key bytes
	KeyBytes int64 `json:"key_bytes,omitempty"`

	// passphrase
	Passphrase string `json:"passphrase,omitempty"`

	// size
	Size int64 `json:"size,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`
}

// Validate validates this inline response 200 14 embedded embedded disk
func (m *InlineResponse20014EmbeddedEmbeddedDisk) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InlineResponse20014EmbeddedEmbeddedDisk) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.Links) { // not required
		return nil
	}

	if m.Links != nil {
		if err := m.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InlineResponse20014EmbeddedEmbeddedDisk) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InlineResponse20014EmbeddedEmbeddedDisk) UnmarshalBinary(b []byte) error {
	var res InlineResponse20014EmbeddedEmbeddedDisk
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
