// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/reggregory/go-deploy/models"
)

// PostClaimsReader is a Reader for the PostClaims structure.
type PostClaimsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostClaimsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostClaimsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostClaimsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostClaimsNoContent creates a PostClaimsNoContent with default headers values
func NewPostClaimsNoContent() *PostClaimsNoContent {
	return &PostClaimsNoContent{}
}

/*PostClaimsNoContent handles this case with default header values.

successful
*/
type PostClaimsNoContent struct {
}

func (o *PostClaimsNoContent) Error() string {
	return fmt.Sprintf("[POST /claims][%d] postClaimsNoContent ", 204)
}

func (o *PostClaimsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostClaimsDefault creates a PostClaimsDefault with default headers values
func NewPostClaimsDefault(code int) *PostClaimsDefault {
	return &PostClaimsDefault{
		_statusCode: code,
	}
}

/*PostClaimsDefault handles this case with default header values.

Error response. Often a 4xx or 5xx status code
*/
type PostClaimsDefault struct {
	_statusCode int

	Payload *models.InlineResponseDefault
}

// Code gets the status code for the post claims default response
func (o *PostClaimsDefault) Code() int {
	return o._statusCode
}

func (o *PostClaimsDefault) Error() string {
	return fmt.Sprintf("[POST /claims][%d] PostClaims default  %+v", o._statusCode, o.Payload)
}

func (o *PostClaimsDefault) GetPayload() *models.InlineResponseDefault {
	return o.Payload
}

func (o *PostClaimsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InlineResponseDefault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
