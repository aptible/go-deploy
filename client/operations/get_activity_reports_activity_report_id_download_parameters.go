// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetActivityReportsActivityReportIDDownloadParams creates a new GetActivityReportsActivityReportIDDownloadParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetActivityReportsActivityReportIDDownloadParams() *GetActivityReportsActivityReportIDDownloadParams {
	return &GetActivityReportsActivityReportIDDownloadParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetActivityReportsActivityReportIDDownloadParamsWithTimeout creates a new GetActivityReportsActivityReportIDDownloadParams object
// with the ability to set a timeout on a request.
func NewGetActivityReportsActivityReportIDDownloadParamsWithTimeout(timeout time.Duration) *GetActivityReportsActivityReportIDDownloadParams {
	return &GetActivityReportsActivityReportIDDownloadParams{
		timeout: timeout,
	}
}

// NewGetActivityReportsActivityReportIDDownloadParamsWithContext creates a new GetActivityReportsActivityReportIDDownloadParams object
// with the ability to set a context for a request.
func NewGetActivityReportsActivityReportIDDownloadParamsWithContext(ctx context.Context) *GetActivityReportsActivityReportIDDownloadParams {
	return &GetActivityReportsActivityReportIDDownloadParams{
		Context: ctx,
	}
}

// NewGetActivityReportsActivityReportIDDownloadParamsWithHTTPClient creates a new GetActivityReportsActivityReportIDDownloadParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetActivityReportsActivityReportIDDownloadParamsWithHTTPClient(client *http.Client) *GetActivityReportsActivityReportIDDownloadParams {
	return &GetActivityReportsActivityReportIDDownloadParams{
		HTTPClient: client,
	}
}

/* GetActivityReportsActivityReportIDDownloadParams contains all the parameters to send to the API endpoint
   for the get activity reports activity report ID download operation.

   Typically these are written to a http.Request.
*/
type GetActivityReportsActivityReportIDDownloadParams struct {

	/* ActivityReportID.

	   activity_report_id
	*/
	ActivityReportID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get activity reports activity report ID download params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetActivityReportsActivityReportIDDownloadParams) WithDefaults() *GetActivityReportsActivityReportIDDownloadParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get activity reports activity report ID download params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetActivityReportsActivityReportIDDownloadParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) WithTimeout(timeout time.Duration) *GetActivityReportsActivityReportIDDownloadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) WithContext(ctx context.Context) *GetActivityReportsActivityReportIDDownloadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) WithHTTPClient(client *http.Client) *GetActivityReportsActivityReportIDDownloadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActivityReportID adds the activityReportID to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) WithActivityReportID(activityReportID int64) *GetActivityReportsActivityReportIDDownloadParams {
	o.SetActivityReportID(activityReportID)
	return o
}

// SetActivityReportID adds the activityReportId to the get activity reports activity report ID download params
func (o *GetActivityReportsActivityReportIDDownloadParams) SetActivityReportID(activityReportID int64) {
	o.ActivityReportID = activityReportID
}

// WriteToRequest writes these params to a swagger request
func (o *GetActivityReportsActivityReportIDDownloadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param activity_report_id
	if err := r.SetPathParam("activity_report_id", swag.FormatInt64(o.ActivityReportID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
