// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/aptible/go-deploy/models"
)

// PostOperationsOperationIDSSHPortalConnectionsReader is a Reader for the PostOperationsOperationIDSSHPortalConnections structure.
type PostOperationsOperationIDSSHPortalConnectionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOperationsOperationIDSSHPortalConnectionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostOperationsOperationIDSSHPortalConnectionsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostOperationsOperationIDSSHPortalConnectionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostOperationsOperationIDSSHPortalConnectionsCreated creates a PostOperationsOperationIDSSHPortalConnectionsCreated with default headers values
func NewPostOperationsOperationIDSSHPortalConnectionsCreated() *PostOperationsOperationIDSSHPortalConnectionsCreated {
	return &PostOperationsOperationIDSSHPortalConnectionsCreated{}
}

/* PostOperationsOperationIDSSHPortalConnectionsCreated describes a response with status code 201, with default header values.

successful
*/
type PostOperationsOperationIDSSHPortalConnectionsCreated struct {
	Payload *models.InlineResponse2018
}

func (o *PostOperationsOperationIDSSHPortalConnectionsCreated) Error() string {
	return fmt.Sprintf("[POST /operations/{operation_id}/ssh_portal_connections][%d] postOperationsOperationIdSshPortalConnectionsCreated  %+v", 201, o.Payload)
}
func (o *PostOperationsOperationIDSSHPortalConnectionsCreated) GetPayload() *models.InlineResponse2018 {
	return o.Payload
}

func (o *PostOperationsOperationIDSSHPortalConnectionsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InlineResponse2018)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOperationsOperationIDSSHPortalConnectionsDefault creates a PostOperationsOperationIDSSHPortalConnectionsDefault with default headers values
func NewPostOperationsOperationIDSSHPortalConnectionsDefault(code int) *PostOperationsOperationIDSSHPortalConnectionsDefault {
	return &PostOperationsOperationIDSSHPortalConnectionsDefault{
		_statusCode: code,
	}
}

/* PostOperationsOperationIDSSHPortalConnectionsDefault describes a response with status code -1, with default header values.

Error response. Often a 4xx or 5xx status code
*/
type PostOperationsOperationIDSSHPortalConnectionsDefault struct {
	_statusCode int

	Payload *models.InlineResponseDefault
}

// Code gets the status code for the post operations operation ID SSH portal connections default response
func (o *PostOperationsOperationIDSSHPortalConnectionsDefault) Code() int {
	return o._statusCode
}

func (o *PostOperationsOperationIDSSHPortalConnectionsDefault) Error() string {
	return fmt.Sprintf("[POST /operations/{operation_id}/ssh_portal_connections][%d] PostOperationsOperationIDSSHPortalConnections default  %+v", o._statusCode, o.Payload)
}
func (o *PostOperationsOperationIDSSHPortalConnectionsDefault) GetPayload() *models.InlineResponseDefault {
	return o.Payload
}

func (o *PostOperationsOperationIDSSHPortalConnectionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InlineResponseDefault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
