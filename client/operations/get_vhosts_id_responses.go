// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aptible/go-deploy/models"
)

// GetVhostsIDReader is a Reader for the GetVhostsID structure.
type GetVhostsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVhostsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVhostsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetVhostsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVhostsIDOK creates a GetVhostsIDOK with default headers values
func NewGetVhostsIDOK() *GetVhostsIDOK {
	return &GetVhostsIDOK{}
}

/*GetVhostsIDOK handles this case with default header values.

successful
*/
type GetVhostsIDOK struct {
	Payload *models.InlineResponse2019
}

func (o *GetVhostsIDOK) Error() string {
	return fmt.Sprintf("[GET /vhosts/{id}][%d] getVhostsIdOK  %+v", 200, o.Payload)
}

func (o *GetVhostsIDOK) GetPayload() *models.InlineResponse2019 {
	return o.Payload
}

func (o *GetVhostsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InlineResponse2019)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVhostsIDDefault creates a GetVhostsIDDefault with default headers values
func NewGetVhostsIDDefault(code int) *GetVhostsIDDefault {
	return &GetVhostsIDDefault{
		_statusCode: code,
	}
}

/*GetVhostsIDDefault handles this case with default header values.

Error response. Often a 4xx or 5xx status code
*/
type GetVhostsIDDefault struct {
	_statusCode int

	Payload *models.InlineResponseDefault
}

// Code gets the status code for the get vhosts ID default response
func (o *GetVhostsIDDefault) Code() int {
	return o._statusCode
}

func (o *GetVhostsIDDefault) Error() string {
	return fmt.Sprintf("[GET /vhosts/{id}][%d] GetVhostsID default  %+v", o._statusCode, o.Payload)
}

func (o *GetVhostsIDDefault) GetPayload() *models.InlineResponseDefault {
	return o.Payload
}

func (o *GetVhostsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InlineResponseDefault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
