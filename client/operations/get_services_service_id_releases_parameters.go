// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetServicesServiceIDReleasesParams creates a new GetServicesServiceIDReleasesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetServicesServiceIDReleasesParams() *GetServicesServiceIDReleasesParams {
	return &GetServicesServiceIDReleasesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetServicesServiceIDReleasesParamsWithTimeout creates a new GetServicesServiceIDReleasesParams object
// with the ability to set a timeout on a request.
func NewGetServicesServiceIDReleasesParamsWithTimeout(timeout time.Duration) *GetServicesServiceIDReleasesParams {
	return &GetServicesServiceIDReleasesParams{
		timeout: timeout,
	}
}

// NewGetServicesServiceIDReleasesParamsWithContext creates a new GetServicesServiceIDReleasesParams object
// with the ability to set a context for a request.
func NewGetServicesServiceIDReleasesParamsWithContext(ctx context.Context) *GetServicesServiceIDReleasesParams {
	return &GetServicesServiceIDReleasesParams{
		Context: ctx,
	}
}

// NewGetServicesServiceIDReleasesParamsWithHTTPClient creates a new GetServicesServiceIDReleasesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetServicesServiceIDReleasesParamsWithHTTPClient(client *http.Client) *GetServicesServiceIDReleasesParams {
	return &GetServicesServiceIDReleasesParams{
		HTTPClient: client,
	}
}

/* GetServicesServiceIDReleasesParams contains all the parameters to send to the API endpoint
   for the get services service ID releases operation.

   Typically these are written to a http.Request.
*/
type GetServicesServiceIDReleasesParams struct {

	/* Page.

	   current page of results for pagination
	*/
	Page *int64

	/* ServiceID.

	   service_id
	*/
	ServiceID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get services service ID releases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServicesServiceIDReleasesParams) WithDefaults() *GetServicesServiceIDReleasesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get services service ID releases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServicesServiceIDReleasesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) WithTimeout(timeout time.Duration) *GetServicesServiceIDReleasesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) WithContext(ctx context.Context) *GetServicesServiceIDReleasesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) WithHTTPClient(client *http.Client) *GetServicesServiceIDReleasesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPage adds the page to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) WithPage(page *int64) *GetServicesServiceIDReleasesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) SetPage(page *int64) {
	o.Page = page
}

// WithServiceID adds the serviceID to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) WithServiceID(serviceID int64) *GetServicesServiceIDReleasesParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the get services service ID releases params
func (o *GetServicesServiceIDReleasesParams) SetServiceID(serviceID int64) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetServicesServiceIDReleasesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Page != nil {

		// query param page
		var qrPage int64

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	// path param service_id
	if err := r.SetPathParam("service_id", swag.FormatInt64(o.ServiceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
